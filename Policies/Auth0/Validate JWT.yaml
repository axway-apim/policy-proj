---
type: FilterCircuit
fields:
  start: ./Extract Access Token From Header
  name: Validate JWT
  description: ""
children:
- type: StringReplaceFilter
  fields:
    sourceAttribute: http.header.Authorization
    destAttribute: accesstoken
    destAttributeOverride: true
    straightMatchString: 'Bearer '
    name: Extract Access Token From Header
  routing:
    success: ../Get JWK
- type: CircuitDelegateFilter
  fields:
    circuitPK: /Policies/Auth0/Get Auth0 JWK
    name: Get JWK
  routing:
    success: ../Verify JWT
  logging:
    fatal: 'Error in calling policy shortcut circuit. Error: ${circuit.exception}'
    failure: Failed in calling policy shortcut
    success: Success in calling policy shortcut
- type: JWTVerifyFilter
  fields:
    jwsToken: ${accesstoken}
    keyDiscoverySelection: 1
    publicKeyAlias: /null
    useSharedKey: false
    sharedKeySelection: 0
    sharedKey: ""
    setPayloadAsContentBody: false
    useCtyHeaderContentType: false
    setPayloadMsgAttribute: true
    name: Verify JWT
  routing:
    success: ../Retrieve JWT Body
    failure: ../Remove cached attribute
- type: ChangeMessageFilter
  fields:
    body: ${jwt.body}
    outputContentType: application/json
    name: Retrieve JWT Body
  routing:
    success: ../Extract claim attributes
  logging:
    fatal: 'Error in setting the message. Error: ${circuit.exception}'
    failure: Failed in setting the message
    success: Success in setting the message
- type: JSONPathFilter
  fields:
    name: Extract claim attributes
  routing:
    success: ../Is token active?
    failure: ../Remove cached attribute
  children:
  - type: JSONPath
    fields:
      attributeName: client_id
      expression: $.aud
      unmarshalType: java.lang.String
      failOnError: true
  - type: JSONPath
    fields:
      attributeName: expires
      expression: $.exp
      unmarshalType: java.lang.String
      failOnError: true
  - type: JSONPath
    fields:
      attributeName: issuer
      expression: $.iss
      unmarshalType: java.lang.String
      failOnError: true
  - type: JSONPath
    fields:
      attributeName: issued
      expression: $.iat
      unmarshalType: java.lang.String
      failOnError: true
- type: JavaScriptFilter
  fields:
    requiredProperties: []
    generatedProperties: []
    consumedProperties: []
    name: Is token active?
    script: '{{file "Validate JWT-Files/Is token active(qmark).nashorn.js"}}'
  routing:
    success: ../Set oauth.token.valid
    failure: ../Remove cached attribute
  logging:
    fatal: 'Error while attempt to run script filter. Error: ${circuit.exception}'
    failure: Failed script filter
    success: Passed script filter
- type: SetAttributeFilter
  fields:
    messageAttribute: oauth.token.valid
    attributeValue: ${auth0.oauth.active}
    name: Set oauth.token.valid
  routing:
    success: ../Set oauth.token.client_id
  logging:
    fatal: 'Error while setting the attribute value. Error: ${circuit.exception}'
    failure: Failed to set the attribute value
    success: Set the attribute value
- type: SetAttributeFilter
  fields:
    messageAttribute: oauth.token.client_id
    attributeValue: ${client_id}
    name: Set oauth.token.client_id
  routing:
    success: ../Set oauth.token.scopes
  logging:
    fatal: 'Error while setting the attribute value. Error: ${circuit.exception}'
    failure: Failed to set the attribute value
    success: Set the attribute value
- type: SetAttributeFilter
  fields:
    messageAttribute: oauth.token.scopes
    attributeValue: openid
    name: Set oauth.token.scopes
  routing:
    success: ../True Filter
  logging:
    fatal: 'Error while setting the attribute value. Error: ${circuit.exception}'
    failure: Failed to set the attribute value
    success: Set the attribute value
- type: TrueFilter
  fields:
    name: True Filter
  logging:
    fatal: 'True filter error. Error: ${circuit.exception}'
    failure: ""
    success: True filter passed
- type: RemoveCachedAttributeFilter
  fields:
    cacheToUse: /Libraries/Cache Manager/Auth0
    name: Remove cached attribute
  routing:
    success: ../Stop
  logging:
    fatal: 'Error while removing attribute from cache. Error: ${circuit.exception}'
    failure: Failed to remove message attribute from cache.
    success: Removed the message attribute form the cache.
- type: FalseFilter
  fields:
    name: Stop
  logging:
    fatal: 'False filter error. Error: ${circuit.exception}'
    success: ""
